
package com.xdev.rapidclipse.demo.localizedui.ui;

import java.util.Locale;

import com.vaadin.navigator.ViewChangeListener;
import com.vaadin.shared.ui.MarginInfo;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.Notification;
import com.vaadin.ui.Notification.Type;
import com.vaadin.ui.UI;
import com.xdev.rapidclipse.demo.localizedui.entities.Customer;
import com.xdev.rapidclipse.demo.localizedui.entities.Customer_;
import com.xdev.res.StringResourceUtils;
import com.xdev.ui.XdevButton;
import com.xdev.ui.XdevGridLayout;
import com.xdev.ui.XdevHorizontalLayout;
import com.xdev.ui.XdevLabel;
import com.xdev.ui.XdevMenuBar;
import com.xdev.ui.XdevMenuBar.XdevMenuItem;
import com.xdev.ui.XdevTextField;
import com.xdev.ui.XdevView;
import com.xdev.ui.entitycomponent.table.XdevTable;
import com.xdev.ui.navigation.Navigation;

public class MainView extends XdevView {

	/**
	 *
	 */
	public MainView() {
		super();
		this.initUI();
	}

	@Override
	public void enter(final ViewChangeListener.ViewChangeEvent event) {
		super.enter(event);
	}

	/**
	 * Event handler delegate method for the {@link XdevButton} {@link #btnLanguageGerman}.
	 *
	 * @see Button.ClickListener#buttonClick(Button.ClickEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void btnLanguageGerman_buttonClick(final Button.ClickEvent event) {

		//Changes the language for the current session
		UI.getCurrent().setLocale(Locale.GERMANY);
		//Save the current language to the current session
		UI.getCurrent().getSession().setAttribute(Locale.class, Locale.GERMANY);
		//Navigates to the itself. Best way to refresh the UI
		Navigation.to("").navigate();
	}

	/**
	 * Event handler delegate method for the {@link XdevButton} {@link #btnLanguageEnglish}.
	 *
	 * @see Button.ClickListener#buttonClick(Button.ClickEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void btnLanguageEnglish_buttonClick(final Button.ClickEvent event) {

		//Changes the language for the current session
		UI.getCurrent().setLocale(Locale.ENGLISH);
		//Save the current language to the current session
		UI.getCurrent().getSession().setAttribute(Locale.class, Locale.ENGLISH);
		//Navigates to the itself. Best way to refresh the UI
		Navigation.to("").navigate();
	}

	/**
	 * Event handler delegate method for the {@link XdevButton} {@link #btnShowMessage}.
	 *
	 * @see Button.ClickListener#buttonClick(Button.ClickEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void btnShowMessage_buttonClick(final Button.ClickEvent event) {
		//Example how to localize dynamic messages
		//" StringResourceUtils.optLocalizeString("{$btnMessage.message}", this) "
		Notification.show(StringResourceUtils.optLocalizeString("{$btnMessage.message}", this), Type.WARNING_MESSAGE);
	}

	/**
	 * Event handler delegate method for the {@link XdevButton} {@link #btnNext}.
	 *
	 * @see Button.ClickListener#buttonClick(Button.ClickEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void btnNext_buttonClick(final Button.ClickEvent event) {
		Navigation.to("secondview").navigate();
	}

	/*
	 * WARNING: Do NOT edit!<br>The content of this method is always regenerated by
	 * the UI designer.
	 */
	// <generated-code name="initUI">
	private void initUI() {
		this.gridLayout = new XdevGridLayout();
		this.menuBar = new XdevMenuBar();
		this.menuItem = this.menuBar.addItem(StringResourceUtils.optLocalizeString("{$menuData.text}", this), null);
		this.menuItem7 = this.menuItem.addItem(StringResourceUtils.optLocalizeString("{$menuOpen.text}", this), null);
		this.menuItem2 = this.menuBar.addItem(StringResourceUtils.optLocalizeString("{$menuEdit.text}", this), null);
		this.menuItem4 = this.menuItem2.addItem(StringResourceUtils.optLocalizeString("{$menuSave.text}", this), null);
		this.menuItem5 = this.menuItem2.addItem(StringResourceUtils.optLocalizeString("{$menuInsert.text}", this), null);
		this.menuItem6 = this.menuItem2.addItem(StringResourceUtils.optLocalizeString("{$menuDelete.text}", this), null);
		this.menuItem3 = this.menuBar.addItem(StringResourceUtils.optLocalizeString("{$menuSource.text}", this), null);
		this.horizontalLayout = new XdevHorizontalLayout();
		this.btnLanguageGerman = new XdevButton();
		this.btnLanguageEnglish = new XdevButton();
		this.horizontalLayout2 = new XdevHorizontalLayout();
		this.btnShowMessage = new XdevButton();
		this.txtName = new XdevTextField();
		this.lbldescription = new XdevLabel();
		this.table = new XdevTable<>();
		this.btnNext = new XdevButton();

		this.horizontalLayout.setMargin(new MarginInfo(false));
		this.btnLanguageGerman.setCaption(StringResourceUtils.optLocalizeString("{$btnLanguageGerman.caption}", this));
		this.btnLanguageEnglish.setCaption(StringResourceUtils.optLocalizeString("{$btnLanguageEnglish.caption}", this));
		this.horizontalLayout2.setMargin(new MarginInfo(false));
		this.btnShowMessage.setCaption(StringResourceUtils.optLocalizeString("{$btnMessage.caption}", this));
		this.txtName.setCaption(StringResourceUtils.optLocalizeString("{$txtName.caption}", this));
		this.lbldescription.setValue(StringResourceUtils.optLocalizeString("{$lbldescription.value}", this));
		this.table.setContainerDataSource(Customer.class);
		this.table.setVisibleColumns(Customer_.customerid.getName(), Customer_.companyname.getName(),
				Customer_.contactname.getName(), Customer_.contacttitle.getName(), Customer_.address.getName(),
				Customer_.city.getName());
		this.btnNext.setCaption(StringResourceUtils.optLocalizeString("{$btnNextPage.caption}", this));

		this.btnLanguageGerman.setWidth(100, Unit.PERCENTAGE);
		this.btnLanguageGerman.setHeight(-1, Unit.PIXELS);
		this.horizontalLayout.addComponent(this.btnLanguageGerman);
		this.horizontalLayout.setComponentAlignment(this.btnLanguageGerman, Alignment.MIDDLE_CENTER);
		this.horizontalLayout.setExpandRatio(this.btnLanguageGerman, 10.0F);
		this.btnLanguageEnglish.setWidth(100, Unit.PERCENTAGE);
		this.btnLanguageEnglish.setHeight(-1, Unit.PIXELS);
		this.horizontalLayout.addComponent(this.btnLanguageEnglish);
		this.horizontalLayout.setComponentAlignment(this.btnLanguageEnglish, Alignment.MIDDLE_CENTER);
		this.horizontalLayout.setExpandRatio(this.btnLanguageEnglish, 10.0F);
		this.btnShowMessage.setWidth(50, Unit.PERCENTAGE);
		this.btnShowMessage.setHeight(-1, Unit.PIXELS);
		this.horizontalLayout2.addComponent(this.btnShowMessage);
		this.horizontalLayout2.setComponentAlignment(this.btnShowMessage, Alignment.MIDDLE_CENTER);
		this.horizontalLayout2.setExpandRatio(this.btnShowMessage, 10.0F);
		this.gridLayout.setColumns(1);
		this.gridLayout.setRows(7);
		this.menuBar.setWidth(100, Unit.PERCENTAGE);
		this.menuBar.setHeight(-1, Unit.PIXELS);
		this.gridLayout.addComponent(this.menuBar, 0, 0);
		this.horizontalLayout.setWidth(100, Unit.PERCENTAGE);
		this.horizontalLayout.setHeight(-1, Unit.PIXELS);
		this.gridLayout.addComponent(this.horizontalLayout, 0, 1);
		this.horizontalLayout2.setWidth(100, Unit.PERCENTAGE);
		this.horizontalLayout2.setHeight(-1, Unit.PIXELS);
		this.gridLayout.addComponent(this.horizontalLayout2, 0, 2);
		this.txtName.setWidth(300, Unit.PIXELS);
		this.txtName.setHeight(-1, Unit.PIXELS);
		this.gridLayout.addComponent(this.txtName, 0, 3);
		this.lbldescription.setSizeUndefined();
		this.gridLayout.addComponent(this.lbldescription, 0, 4);
		this.table.setSizeFull();
		this.gridLayout.addComponent(this.table, 0, 5);
		this.btnNext.setWidth(50, Unit.PERCENTAGE);
		this.btnNext.setHeight(-1, Unit.PIXELS);
		this.gridLayout.addComponent(this.btnNext, 0, 6);
		this.gridLayout.setComponentAlignment(this.btnNext, Alignment.TOP_CENTER);
		this.gridLayout.setColumnExpandRatio(0, 10.0F);
		this.gridLayout.setRowExpandRatio(5, 10.0F);
		this.gridLayout.setSizeFull();
		this.setContent(this.gridLayout);
		this.setSizeFull();

		this.btnLanguageGerman.addClickListener(event -> this.btnLanguageGerman_buttonClick(event));
		this.btnLanguageEnglish.addClickListener(event -> this.btnLanguageEnglish_buttonClick(event));
		this.btnShowMessage.addClickListener(event -> this.btnShowMessage_buttonClick(event));
		this.btnNext.addClickListener(event -> this.btnNext_buttonClick(event));
	} // </generated-code>

	// <generated-code name="variables">
	private XdevButton btnLanguageGerman, btnLanguageEnglish, btnShowMessage, btnNext;
	private XdevLabel lbldescription;
	private XdevMenuBar menuBar;
	private XdevTable<Customer> table;
	private XdevHorizontalLayout horizontalLayout, horizontalLayout2;
	private XdevMenuItem menuItem, menuItem7, menuItem2, menuItem4, menuItem5, menuItem6, menuItem3;
	private XdevGridLayout gridLayout;
	private XdevTextField txtName;
	// </generated-code>
}
